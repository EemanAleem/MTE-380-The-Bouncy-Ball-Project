# Import libraries
from smbus2 import SMBus
from time import sleep
import struct

# Set up I2C connection with Arduino
addr = 0x8 # bus address
bus = SMBus(1) # indicates /dev/i2c-1
sleep(3) # Wait for I2C connection to stabilize

# pos[] is our array with the desired motor positions for 3 motors
# BytePos[] is an array that will hold the byte lists generated by the 'pack' function
pos = [500, 1000, 1500]
BytePos = [0,0,0]

while True:
    for i in range (0,3):
        # The 'pack' function's parameters are the (byte order & format type, value you want to pack)
        # format type essentially means what format and datatype you're using and it's governed by the character in the first parameter
        # 'h' means your desired format type is a signed short integer
        # '>' indicates the byte order you want your pack in, which is big-endian format with the MSB at the front here
        BytePos[i] = list(struct.pack('>h', pos[i]))
        # For i = 0 for the first run of the program, BytePos[i] = [[MSB1, LSB1], 0, 0] 
        # where MSB1 & LSB1 are the two split bytes generated by the 'pack' function
        
        # Print and send each byte for a single value from your original steps[i] array
        for j in range (0,2):
            print("BytePos[", i, "][", j, "]: ", BytePos[i][j])
            bus.write_byte(addr, BytePos[i][j])
            sleep(0.05) # I2C transmission delay of 0.05s or 50 milliseconds ****1

        # Display original values sent
        print("pos[", i, "]: ", pos[i])
        # Increase original stepper values by 2
        pos[i] = pos[i] + 2
